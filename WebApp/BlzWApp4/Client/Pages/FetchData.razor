@page "/fetchdata"
@using BlzWApp4.Shared
@inject HttpClient Http

<h1>Covid 19 Tracker Data</h1>

<table style="width:100%;">
    <tr>
        <td>
            <select class="form-control" @onchange="@OnSelectCountries" style="width:150px">
                @foreach (var countrie in countries)
                {
                    <option value=@countrie>@countrie</option>
                }
            </select>
        </td>
        <td>
            Дата: <input @bind="selectedDate" @bind:format="dd.MM.yyyy" />
        </td>
    </tr>
</table>

<br />

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @if (selectedCounrty == "All countries")
    {
        if (null == selectedDate)
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Country</th>
                        <th>Confirmed</th>
                        <th>Deaths</th>
                        <th>Stringency_actual</th>
                        <th>Stringency</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var forecast in forecasts)
                    {
                        <tr>
                            <td>@forecast.Date.ToShortDateString()</td>
                            <td>@forecast.country_name</td>
                            <td>@forecast.confirmed.ToString()</td>
                            <td>@forecast.deaths.ToString()</td>
                            <td>@forecast.stringency_actual</td>
                            <td>@forecast.stringency</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Country</th>
                        <th>Confirmed</th>
                        <th>Deaths</th>
                        <th>Stringency_actual</th>
                        <th>Stringency</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var forecast in forecasts.Where(c => c.Date == selectedDate))
                    {
                        <tr>
                            <td>@forecast.Date.ToShortDateString()</td>
                            <td>@forecast.country_name</td>
                            <td>@forecast.confirmed.ToString()</td>
                            <td>@forecast.deaths.ToString()</td>
                            <td>@forecast.stringency_actual</td>
                            <td>@forecast.stringency</td>
                        </tr>
                    }
                </tbody>
            </table>
        }


    }
    else
    {
        if (null == selectedDate)
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Country</th>
                        <th>Confirmed</th>
                        <th>Deaths</th>
                        <th>Stringency_actual</th>
                        <th>Stringency</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var forecast in forecasts.Where(c => c.country_name == selectedCounrty))
                    {
                        <tr>
                            <td>@forecast.Date.ToShortDateString()</td>
                            <td>@forecast.country_name</td>
                            <td>@forecast.confirmed.ToString()</td>
                            <td>@forecast.deaths.ToString()</td>
                            <td>@forecast.stringency_actual</td>
                            <td>@forecast.stringency</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Country</th>
                        <th>Confirmed</th>
                        <th>Deaths</th>
                        <th>Stringency_actual</th>
                        <th>Stringency</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var forecast in forecasts.Where(c => (c.country_name == selectedCounrty) && (c.Date == selectedDate)))
                    {
                        <tr>
                            <td>@forecast.Date.ToShortDateString()</td>
                            <td>@forecast.country_name</td>
                            <td>@forecast.confirmed.ToString()</td>
                            <td>@forecast.deaths.ToString()</td>
                            <td>@forecast.stringency_actual</td>
                            <td>@forecast.stringency</td>
                        </tr>
                    }
                </tbody>
            </table>
        }


    }
}

@code {
    private WeatherForecast[] forecasts;

    List<string> countries = new List<string>() { "All countries", "Austria", "China", "France", "Greece", "India", "Israel", "Italy", "Russian Federation", "Switzerland", "United States" };
    string selectedCounrty = "All countries";

    DateTime? selectedDate = null;


    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
        int j = 0;
    }

    private void Get5Rows()
    {
        //forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
        //forecasts = (WeatherForecast[])(this.forecasts.ToArray().Take(5));


        int j = 0;
    }

    void OnSelectCountries(ChangeEventArgs e)
    {
        selectedCounrty = e.Value.ToString();
        //Console.WriteLine("The selected country is : " + selectedString);
    }

}
